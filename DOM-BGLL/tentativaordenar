nt qtdNumMao(int qtd[7], int qtdOrd[7], Jogador jogadores[NUM_JOGADORES],int pc) {
    int totalPecas = 0;  // inicializa a variavel totalPecas
    int auxiliar;  // variavel auxiliar para a troca de valores no vetor
    
    int vetorTemp[7];

    // inicializa o array qtd com zero
    for (int k = 0; k < 7; k++) {
        vetorTemp[k] = 0;
        qtdOrd[k] = 0;
    }
    
    mostrarPecasJogadorAtual(jogadores, 1);
    printf("\n");
    
    // conta a quantidade de vezes que cada num aparece 
    for (int cont = 0; cont < jogadores[1].numPieces; cont++) {
        if (jogadores[1].pecasMao[cont].ladoA >= 0 && jogadores[1].pecasMao[cont].ladoA <= 6) {
            vetorTemp[jogadores[1].pecasMao[cont].ladoA] = vetorTemp[jogadores[1].pecasMao[cont].ladoA] + 1;  
            totalPecas = totalPecas + 1;  
        }
        if (jogadores[1].pecasMao[cont].ladoB >= 0 && jogadores[1].pecasMao[cont].ladoB <= 6) {
            vetorTemp[jogadores[1].pecasMao[cont].ladoB] = vetorTemp[jogadores[1].pecasMao[cont].ladoB] + 1;  
            totalPecas = totalPecas + 1;  
        }
    }
    
    for(int i = 0; i < 7; i++){
    	qtd[i] = vetorTemp[i];
	}
	
	mostrarArray(qtd);
    
    // ordena o array em ordem decrescente
    for (int k = 0; k < 7; k++) {
        for (int i = k + 1; i < 7; i++) {
            if (vetorTemp[k] < vetorTemp[i]) {
                auxiliar = vetorTemp[k];
                vetorTemp[k] = vetorTemp[i];
                vetorTemp[i] = auxiliar;
            }
        }
   	}
   	mostrarArray(vetorTemp);
   
	int j = 0;   
   	for(int i = 0; i < 7; i++){
		for(int k = 0; k < 7 && j < 7; k++){
			if(qtd[i] == vetorTemp[k]){
				qtdOrd[i] = k;  
			}
		}
	}
	
   	mostrarArray(qtdOrd);

    return totalPecas;  // retorna o total de pecas
}
